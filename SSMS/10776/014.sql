USE master

IF EXISTS (SELECT * FROM SYS.databases WHERE name = 'DB')
BEGIN
	ALTER DATABASE DB
	SET SINGLE_USER
	WITH ROLLBACK IMMEDIATE

	DROP DATABASE DB
END

CREATE DATABASE DB
GO

USE DB

CREATE TABLE dbo.PEDIDO
(
    COD_PEDIDO INT IDENTITY PRIMARY KEY,
    DATA_PEDIDO DATE
)

INSERT PEDIDO 
VALUES ('20130101'), 
	('20130202'), 
	('20130303'), 
	('20130404')

--PROCE (PARSE, RESOLVE, OPTIMIZE, COMPILE-CACHE, EXECUTE)

--CELECT *
--FROM PEDIDO

--SELECT *
--FROM BATATINHA

SELECT * 
FROM PEDIDO

GO

CREATE FUNCTION UDF_DIVIDIR
(
	@X INT = 10, 
	@Y INT = 3
)
RETURNS INT
AS
BEGIN
	RETURN @X/@Y
END
GO

SELECT DBO.UDF_DIVIDIR(100, 3)

SELECT DBO.UDF_DIVIDIR(100, DEFAULT)

SELECT DBO.UDF_DIVIDIR(100, 0)

PRINT 'OI'

SELECT * 
FROM SYS.messages
WHERE MESSAGE_ID = 8134

EXEC SP_ADDMESSAGE 50001, 16, 'error inserting table %s'

EXEC SP_ADDMESSAGE 50001, 16, 'erro inserindo na tabela %1', 'brazilian', @replace = 'replace'

SELECT * 
FROM SYS.messages
WHERE MESSAGE_ID = 50001

RAISERROR(50001, 16, 1, 'PRODUTO')

SET LANGUAGE BRAZILIAN

RAISERROR(50001, 16, 1, 'PRODUTO')

SET LANGUAGE ENGLISH

EXEC sp_dropmessage 50001, 'brazilian'
EXEC sp_dropmessage 50001

SET XACT_ABORT ON

PRINT 'ANTES'
PRINT 1/0
PRINT 'DEPOIS'

SET XACT_ABORT OFF

PRINT 'ANTES'
PRINT 1/0
PRINT 'DEPOIS'

RAISERROR('erro inserindo na tabela %s', 16, 2, 'PEDIDO')
RAISERROR('erro inserindo na tabela %s', 16, 2, 'ITEM_PEDIDO')

BEGIN TRY -- TENTATIVA DE EXECUÇÃO
	PRINT 'ANTES'
	PRINT 1/0
	PRINT 'DEPOIS'
END TRY
BEGIN CATCH  --CAPTURA DOS ERROS DO TRY
	PRINT CONCAT('   ', ERROR_NUMBER())
	PRINT CONCAT('   ', ERROR_MESSAGE())
	PRINT CONCAT('   ', ERROR_SEVERITY())
	PRINT CONCAT('   ', ERROR_LINE())
END CATCH

BEGIN TRY -- TENTATIVA DE EXECUÇÃO
	PRINT 'ANTES'
	PRINT 1/0
	PRINT 'DEPOIS'
END TRY
BEGIN CATCH  --CAPTURA DOS ERROS DO TRY
	PRINT CONCAT('   ', ERROR_NUMBER())
	PRINT CONCAT('   ', ERROR_MESSAGE())
	PRINT CONCAT('   ', ERROR_SEVERITY())
	PRINT CONCAT('   ', ERROR_LINE())

	DECLARE @N INT = ERROR_NUMBER()
	DECLARE @M VARCHAR(MAX) = ERROR_MESSAGE()
	DECLARE @S INT = ERROR_STATE()

	;THROW @N, @M, @S
END CATCH

EXEC SP_TABLES

CREATE TABLE DBO.ITEM_PEDIDO
(
    COD_ITEM_PEDIDO INT IDENTITY PRIMARY KEY,
	COD_PRODUTO INT, --REF PRODUTO
	QTD_ITEM_PEDIDO INT, 
	PRECO_ITEM_PEDIDO DEC(9, 2),
	COD_PEDIDO INT REFERENCES PEDIDO
)

DELETE PEDIDO

GO

CREATE PROC USP_PEDIDO_ITEM_PEDIDO_OLD
	@DATA_PEDIDO DATE, 
	@COD_PRODUTO INT,
	@QTD_ITEM_PEDIDO INT, 
	@PRECO_ITEM_PEDIDO DEC(9, 2), 
	@COD_PEDIDO INT = NULL
AS

	BEGIN TRAN

	IF @COD_PEDIDO IS NULL
	BEGIN
		INSERT PEDIDO 
		VALUES (@DATA_PEDIDO)
		IF @@ERROR <> 0 
		BEGIN
			RAISERROR(50001, 16, 1, 'PEDIDO')
			GOTO ERROR
		END	

		SET @COD_PEDIDO = IDENT_CURRENT('PEDIDO')
	END

	INSERT ITEM_PEDIDO 
	VALUES (@COD_PRODUTO, @QTD_ITEM_PEDIDO, @PRECO_ITEM_PEDIDO, @COD_PEDIDO)
	IF @@ERROR <> 0 
	BEGIN
		RAISERROR(50001, 16, 1, 'ITEM_PEDIDO')
		GOTO ERROR
	END	

	COMMIT

	GOTO FIM
ERROR:
	ROLLBACK
FIM:
	RETURN ISNULL(@COD_PEDIDO, 0)
GO

EXEC SP_ADDMESSAGE 50001, 16, 'error inserting table %s'
EXEC SP_ADDMESSAGE 50001, 16, 'erro inserindo na tabela %1', 'brazilian', @replace = 'replace'

DECLARE @COD_PEDIDO INT = NULL
EXEC @COD_PEDIDO = USP_PEDIDO_ITEM_PEDIDO_OLD '20130813', 1, 1, 10
EXEC USP_PEDIDO_ITEM_PEDIDO_OLD NULL, 2, 1, 20, @COD_PEDIDO
EXEC USP_PEDIDO_ITEM_PEDIDO_OLD NULL, 3, 1, 25, @COD_PEDIDO
EXEC USP_PEDIDO_ITEM_PEDIDO_OLD NULL, 4, 1, 23, @COD_PEDIDO

GO

CREATE TYPE TIPO_ITEM_PEDIDO
AS TABLE
(
	COD_PRODUTO INT, 
	QTD_ITEM_PEDIDO INT, 
	PRECO_ITEM_PEDIDO DEC(9, 2)
)

GO

CREATE PROC USP_PEDIDO_ITEM_PEDIDO_NEW
	@DATA_PEDIDO DATE, 
	@TIPO_ITEM_PEDIDO TIPO_ITEM_PEDIDO READONLY
AS
	BEGIN TRY
		BEGIN TRAN
		
		INSERT PEDIDO
		VALUES (@DATA_PEDIDO)

		DECLARE @COD_PEDIDO INT = IDENT_CURRENT('PEDIDO')

		INSERT ITEM_PEDIDO
		SELECT *, 
			@COD_PEDIDO
		FROM @TIPO_ITEM_PEDIDO

		COMMIT
	END TRY
	BEGIN CATCH
		ROLLBACK
	
		;THROW 	
	END CATCH
GO

DECLARE @TABELA TIPO_ITEM_PEDIDO

INSERT @TABELA
VALUES (1, 1, 10), 
(2, 1, 20), 
(3, 1, 25), 
(4, 1, 23)

EXEC USP_PEDIDO_ITEM_PEDIDO_NEW '20130813', @TABELA

SELECT * 
FROM ITEM_PEDIDO

--CRIAR ALERTA PARA UM ERRO

RAISERROR(50001, 16, 1, 'BATATINHA') WITH LOG
