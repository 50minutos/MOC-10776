USE master

IF EXISTS (SELECT * FROM SYS.databases WHERE name = 'DB')
BEGIN
	ALTER DATABASE DB
	SET SINGLE_USER
	WITH ROLLBACK IMMEDIATE

	DROP DATABASE DB
END

CREATE DATABASE DB
GO

USE DB

CREATE TABLE TIPO_PRODUTO
(
	COD_TIPO_PRODUTO INT IDENTITY PRIMARY KEY, 
	NOME_TIPO_PRODUTO VARCHAR(50)
)

CREATE TABLE PRODUTO
(
	COD_PRODUTO INT IDENTITY PRIMARY KEY, 
	NOME_PRODUTO VARCHAR(50), 
	PRECO_PRODUTO DEC(9, 2),
	COD_TIPO_PRODUTO INT REFERENCES TIPO_PRODUTO
)

INSERT TIPO_PRODUTO
VALUES ('FERRAMENTA'), 
	('FRUTA'), 
	('MATERIAL ESCOLAR')

INSERT PRODUTO 
VALUES ('MARRETA', 40, 1), 
	('SERROTE', 70, 1), 
	('CADERNO', 12, 3), 
	('LIMA', 19, 1), 
	('MARTELO', 30, 1), 
	('LIMA', 3.7, 2), 
	('SARGENTO', 27.23, 1), 
	('MAMÃO', 4.7, 2), 
	('LARANJA', 6.5, 2)

SELECT * 
FROM TIPO_PRODUTO

SELECT * 
FROM PRODUTO

SELECT * 
FROM PRODUTO 
FOR XML RAW

SELECT * 
FROM PRODUTO 
FOR XML PATH

SELECT * 
FROM PRODUTO 
FOR XML AUTO

SELECT * 
FROM PRODUTO 
FOR XML RAW('PRODUTO')

SELECT * 
FROM PRODUTO 
FOR XML PATH('PRODUTO')

--SELECT * 
--FROM PRODUTO
--FOR XML AUTO('LINHA')

SELECT * 
FROM PRODUTO 
FOR XML RAW, ROOT('PRODUTOS') --ROOT

SELECT * 
FROM PRODUTO 
FOR XML PATH, ROOT('PRODUTOS') --ROOT

SELECT * 
FROM PRODUTO 
FOR XML AUTO, ROOT('PRODUTOS') --ROOT

CREATE TABLE [TABELA A]
(
	CAMPO INT
)

INSERT [TABELA A]
VALUES (1)

SELECT * 
FROM [TABELA A]
FOR XML AUTO

EXEC SP_RENAME [TABELA A], 'TABELAÇA'

SELECT * 
FROM TABELAÇA
FOR XML AUTO

SELECT * 
FROM TIPO_PRODUTO
JOIN PRODUTO 
	ON TIPO_PRODUTO.COD_TIPO_PRODUTO = PRODUTO.COD_TIPO_PRODUTO
ORDER BY TIPO_PRODUTO.COD_TIPO_PRODUTO
FOR XML AUTO

SELECT * 
FROM PRODUTO
JOIN TIPO_PRODUTO 
	ON TIPO_PRODUTO.COD_TIPO_PRODUTO = PRODUTO.COD_TIPO_PRODUTO
ORDER BY TIPO_PRODUTO.COD_TIPO_PRODUTO
FOR XML AUTO

SELECT * 
FROM TIPO_PRODUTO TP
JOIN PRODUTO P
	ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
ORDER BY TP.COD_TIPO_PRODUTO
FOR XML AUTO

SELECT * 
FROM TIPO_PRODUTO TP
JOIN PRODUTO P
	ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
ORDER BY TP.COD_TIPO_PRODUTO
FOR XML PATH

SELECT TP.*, 
	P.COD_PRODUTO, 
	P.NOME_PRODUTO, 
	P.PRECO_PRODUTO 
FROM TIPO_PRODUTO TP
JOIN PRODUTO P
	ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
ORDER BY TP.COD_TIPO_PRODUTO
FOR XML RAW

SELECT COD_PRODUTO '@COD_PRODUTO', 
	NOME_PRODUTO, 
	PRECO_PRODUTO
FROM PRODUTO
FOR XML PATH

SELECT COD_PRODUTO '@COD_PRODUTO', 
	COD_TIPO_PRODUTO 'DETALHES/@TIPO',	
	NOME_PRODUTO 'DETALHES/@NOME', 
	PRECO_PRODUTO 'DETALHES/PRECO'
FROM PRODUTO
FOR XML PATH


SELECT COD_PRODUTO '@COD', 
	NOME_PRODUTO 'NOME', 
	PRECO_PRODUTO 'PRECO'
FROM PRODUTO
FOR XML PATH('PRODUTO'), ROOT('PRODUTOS')

INSERT PRODUTO 
VALUES ('ARROZ DE FORNO', 10, NULL)

SELECT *
FROM PRODUTO
FOR XML AUTO

SELECT *
FROM PRODUTO
FOR XML RAW

SELECT *
FROM PRODUTO
FOR XML PATH, ELEMENTS XSINIL

INSERT PRODUTO 
VALUES ('', 10, NULL)

SELECT *
FROM PRODUTO
FOR XML AUTO

SELECT *
FROM PRODUTO
FOR XML RAW

SELECT *
FROM PRODUTO
FOR XML PATH, ELEMENTS XSINIL

SELECT *, 
	(SELECT * FROM PRODUTO FOR XML AUTO) AS 'PRODUTO'
FROM TIPO_PRODUTO

SELECT *, 
	CONVERT(XML, (SELECT * FROM PRODUTO FOR XML AUTO)) AS 'PRODUTO'
FROM TIPO_PRODUTO

SELECT *, 
	(SELECT * FROM PRODUTO FOR XML AUTO, TYPE) AS 'PRODUTO'
FROM TIPO_PRODUTO

CREATE TABLE LOG
(
	MAQUINA SYSNAME DEFAULT HOST_NAME(), 
	DADOS XML 
)

GO

CREATE TRIGGER UDDLTR_VIGIA_TABLE
	ON DATABASE
	FOR CREATE_TABLE, ALTER_TABLE, DROP_TABLE
AS
	INSERT LOG(DADOS)
	VALUES (EVENTDATA())
GO

DROP TABLE TABELAÇA

CREATE TABLE PESSOA
(
	COD_PESSOA INT IDENTITY PRIMARY KEY, 
	NOME_PESSOA VARCHAR(50)
)

ALTER TABLE PESSOA
ADD SEXO_PESSOA CHAR(1)

ALTER TABLE PESSOA
ADD CONSTRAINT CK_PESSOA_SEXO_PESSOA
CHECK (SEXO_PESSOA IN ('M', 'F'))

SELECT *
FROM LOG

SELECT DADOS.query('/EVENT_INSTANCE') 
FROM LOG

SELECT DADOS.query('/EVENT_INSTANCE/EventType') 
FROM LOG

SELECT DADOS.query('/EVENT_INSTANCE/TSQLCommand/SetOptions[@ENCRYPTED="FALSE"]') 
FROM LOG

SELECT DADOS.value('(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]', 'NVARCHAR(MAX)') 
FROM LOG

SELECT DADOS.value('(/EVENT_INSTANCE/TSQLCommand/SetOptions/@ENCRYPTED)[1]', 'NVARCHAR(MAX)') 
FROM LOG

SELECT DADOS.exist('/EVENT_INSTANCE[EventType = "DROP_TABLE"]')
FROM LOG

SELECT *
FROM LOG
WHERE 1 = DADOS.exist('/EVENT_INSTANCE[EventType = "DROP_TABLE"]')

DECLARE @X XML =
'<?xml version="1.0" encoding="iso-8859-1"?>
<FAMILIA>
	<PAI NOME="ANTONIO">
		<FILHO NOME="AGNALDO" IDADE="46" SEXO="M"/>
		<FILHO NOME="KELY" IDADE="34" SEXO="F"/>
		<FILHO NOME="CAIO CÉSAR" IDADE="22" SEXO="M"/>
	</PAI>
	<PAI NOME="AGNALDO">
		<FILHO NOME="BRUNO" IDADE="21" SEXO="M"/>
		<FILHO NOME="NETINHO" IDADE="16" SEXO="M"/>
		<FILHO NOME="PEDRO" IDADE="15" SEXO="M"/>
	</PAI>
	<PAI NOME="DANIEL">
		<FILHO NOME="RENATA" IDADE="48" SEXO="F"/>
		<FILHO NOME="FERNANDO" IDADE="46" SEXO="M"/>
		<FILHO NOME="ROBERTA" IDADE="42" SEXO="F"/>
		<FILHO NOME="JAIRO" IDADE="41" SEXO="M"/>
	</PAI>
	<PAI NOME="FERNANDO">
		<FILHO NOME="LUCAS" IDADE="19" SEXO="M"/>
		<FILHO NOME="HELDER" IDADE="15" SEXO="M"/>
		<FILHO NOME="MATHEUS" IDADE="5" SEXO="M"/>
	</PAI>
</FAMILIA>'
--SELECT @X.query('/FAMILIA')
--SELECT @X.query('/FAMILIA/PAI')
--SELECT @X.query('/FAMILIA/PAI/FILHO')
--SELECT @X.query('/FAMILIA/PAI[@NOME="AGNALDO"]/FILHO')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@NOME="NETINHO"]/..')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@NOME="NETINHO"]/../FILHO')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@IDADE=16]')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@IDADE=16]/..')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@IDADE<=18]/..')
--SELECT @X.query(
--'for $i in /FAMILIA/PAI
--return 
--   <PAI NOME="{$i/@NOME}"/>
--') 
--SELECT @X.query(
--'for $i in /FAMILIA/PAI
--where $i/FILHO[@IDADE <= 18]
--return 
--   <PAI NOME="{$i/@NOME}"/>
--') 
--SELECT @X.query(
--'for $i in /FAMILIA/PAI
--where $i/FILHO[@SEXO = "F"]
--return 
--   <PAI NOME="{$i/@NOME}"/>
--') 
--SELECT @X.query(
--'for $i in /FAMILIA/PAI
--order by $i/@NOME
--return 
--   <PAI NOME="{$i/@NOME}"/>
--') 
--SELECT @X.query(
--'for $i in /FAMILIA/PAI/FILHO
--order by $i/@NOME
--return 
--   <FILHO NOME="{$i/@NOME}" IDADE="{$i/@IDADE}"/>
--') 

--DECLARE @X XML =
--'<?xml version="1.0" encoding="iso-8859-1"?>
--<FAMILIA>
--	<PAI NOME="ANTONIO">
--		<FILHO NOME="AGNALDO" IDADE="46" SEXO="M"/>
--		<FILHO NOME="KELY" IDADE="34" SEXO="F"/>
--		<FILHO NOME="CAIO CÉSAR" IDADE="22" SEXO="M"/>
--	</PAI>
--	<PAI NOME="AGNALDO">
--		<FILHO NOME="BRUNO" IDADE="21" SEXO="M"/>
--		<FILHO NOME="NETINHO" IDADE="16" SEXO="M"/>
--		<FILHO NOME="PEDRO" IDADE="15" SEXO="M"/>
--	</PAI>
--	<PAI NOME="DANIEL">
--		<FILHO NOME="RENATA" IDADE="48" SEXO="F"/>
--		<FILHO NOME="FERNANDO" IDADE="46" SEXO="M"/>
--		<FILHO NOME="ROBERTA" IDADE="42" SEXO="F"/>
--		<FILHO NOME="JAIRO" IDADE="41" SEXO="M"/>
--	</PAI>
--	<PAI NOME="FERNANDO">
--		<FILHO NOME="LUCAS" IDADE="19" SEXO="M"/>
--		<FILHO NOME="HELDER" IDADE="15" SEXO="M"/>
--		<FILHO NOME="MATHEUS" IDADE="5" SEXO="M"/>
--	</PAI>
--</FAMILIA>'
--SELECT @X.query('/FAMILIA')
--SELECT @X.query('/FAMILIA/PAI')
--SELECT @X.query('/FAMILIA/PAI/FILHO')
--SELECT @X.query('/FAMILIA/PAI[@NOME="AGNALDO"]/FILHO')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@NOME="NETINHO"]/..')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@NOME="NETINHO"]/../FILHO')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@IDADE=16]')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@IDADE=16]/..')
--SELECT @X.query('/FAMILIA/PAI/FILHO[@IDADE<=18]/..')
--SELECT @X.query(
--'for $i in /FAMILIA/PAI
--return 
--   <PAI NOME="{$i/@NOME}"/>
--') 
--SELECT @X.query(
--'for $i in /FAMILIA/PAI
--where $i/FILHO[@IDADE <= 18]
--return 
--   <PAI NOME="{$i/@NOME}"/>
--') 
--SELECT @X.query(
--'for $i in /FAMILIA/PAI
--where $i/FILHO[@SEXO = "F"]
--return 
--   <PAI NOME="{$i/@NOME}"/>
--') 
--SELECT @X.query(
--'for $i in /FAMILIA/PAI
--order by $i/@NOME
--return 
--   <PAI NOME="{$i/@NOME}"/>
--') 
--SELECT @X.query(
--'for $i in /FAMILIA/PAI/FILHO
--order by $i/@NOME
--return 
--   <FILHO NOME="{$i/@NOME}" IDADE="{$i/@IDADE}"/>
--') 
--SELECT @X.value('(/FAMILIA/PAI/@NOME)[1]', 'NVARCHAR(MAX)')
--SELECT @X.value('(/FAMILIA/PAI/@NOME)[2]', 'NVARCHAR(MAX)')
--SELECT @X.value('(/FAMILIA/PAI/FILHO/@NOME)[1]', 'VARCHAR(50)') AS 'NOME', 
--	@X.value('(/FAMILIA/PAI/FILHO/@SEXO)[1]', 'CHAR(1)') AS 'SEXO', 
--	@X.value('(/FAMILIA/PAI/FILHO/@IDADE)[1]', 'INT') AS 'IDADE'

--SELECT @X.nodes('/FAMILIA/PAI')

--CREATE TABLE FAMILIA
--(
--	DADOS XML
--)
--INSERT FAMILIA 
--VALUES (@X)

SELECT T.PAI.query('.')
FROM FAMILIA
CROSS APPLY DADOS.nodes('/FAMILIA/PAI') AS T(PAI)

SELECT T.FILHO.query('.')
FROM FAMILIA
CROSS APPLY DADOS.nodes('/FAMILIA/PAI/FILHO') AS T(FILHO)

SELECT T.FILHO.query('.')
FROM FAMILIA
CROSS APPLY DADOS.nodes('/FAMILIA/PAI/FILHO[@IDADE <= 18]') AS T(FILHO)

SELECT T.DADOS.value('@NOME', 'VARCHAR(50)') AS 'NOME', 
	T.DADOS.value('@IDADE', 'INT') AS 'IDADE', 
	T.DADOS.value('@SEXO', 'CHAR(1)') AS 'SEXO'
FROM FAMILIA
CROSS APPLY DADOS.nodes('/FAMILIA/PAI/FILHO') AS T(DADOS)

SELECT T.DADOS.value('../@NOME', 'VARCHAR(50)') AS 'NOME_PAI', 
	T.DADOS.value('@NOME', 'VARCHAR(50)') AS 'NOME', 
	T.DADOS.value('@IDADE', 'INT') AS 'IDADE', 
	T.DADOS.value('@SEXO', 'CHAR(1)') AS 'SEXO'
FROM FAMILIA
CROSS APPLY DADOS.nodes('/FAMILIA/PAI/FILHO') AS T(DADOS)

CREATE TABLE CV
(
	COD_CV INT IDENTITY, 
	DADOS_CV XML
)

INSERT CV
VALUES('<?xml version="1.0" encoding="iso-8859-1"?>
<DADOS>
	<PESSOAIS NOME="ZÉ DITO"/>
	<TREINAMENTOS>
		<CURSO NOME="2778 - SQL SERVER 2008"/>
		<CURSO NOME="6231 - SQL SERVER 2008"/>
		<CURSO NOME="6232 - SQL SERVER 2008"/>
		<CURSO NOME="10774 - SQL SERVER 2012"/>
		<CURSO NOME="10775 - SQL SERVER 2012"/>
		<CURSO NOME="10776 - SQL SERVER 2012"/>
		<CURSO NOME="10777 - SQL SERVER 2012"/>
		<CURSO NOME="10778 - SQL SERVER 2012"/>
	</TREINAMENTOS>
	<GRADUACAO NOME="CORTE E COSTURA" UNI="FACOCO"/>
	<GRADUACAO NOME="FUNILARIA E PINTURA" UNI="FAFUPI"/>
	<GRADUACAO NOME="PROCESSAMENTO DE DADOS" UNI="FATEC"/>
	<POS NOME="COZINHA MEDITERRÂNEA" UNI="FAFOFO"/>
	<CARGO NOME="DBA JR" SALARIO="1000"/>
	<CARGO NOME="DBA PLENO" SALARIO="1100"/>
	<CARGO NOME="DBA SENIOR" SALARIO="1200"/>
	<CARGO NOME="DBA GOD MODE" SALARIO="1210"/>
</DADOS>
')

SELECT *
FROM CV

UPDATE CV
SET DADOS_CV.modify('
	insert 	<CURSO NOME="6234 - SQL SERVER 2008"/>
	into (/DADOS/TREINAMENTOS)[1]
')
WHERE COD_CV = 1

SELECT *
FROM CV

UPDATE CV
SET DADOS_CV.modify('
	insert 	<CURSO NOME="6235 - SQL SERVER 2008"/>
	after (/DADOS/TREINAMENTOS/CURSO[@NOME="2778 - SQL SERVER 2008"])[1]
')
WHERE COD_CV = 1

SELECT *
FROM CV

UPDATE CV
SET DADOS_CV.modify('
	insert 	<CURSO NOME="6236 - SQL SERVER 2008"/>
	before (/DADOS/TREINAMENTOS/CURSO[@NOME="2778 - SQL SERVER 2008"])[1]
')
WHERE COD_CV = 1

SELECT * 
FROM CV

UPDATE CV
SET DADOS_CV.modify('
	replace value of (/DADOS/TREINAMENTOS/CURSO[@NOME="6236 - SQL SERVER 2008"]/@NOME)[1]
	with "6236 - SQL SERVER 2008 - REPORTING SERVICES"
')
WHERE COD_CV = 1

SELECT * 
FROM CV

UPDATE CV
SET DADOS_CV.modify('
	delete /DADOS/CARGO
')
where COD_CV = 1

SELECT * 
FROM CV

UPDATE CV
SET DADOS_CV.modify('
	delete /DADOS/GRADUACAO[@NOME="CORTE E COSTURA"]
')
where COD_CV = 1

SELECT * 
FROM CV

GO

CREATE TABLE CLIENTE
(
	COD_CLIENTE INT, 
	NOME_CLIENTE VARCHAR(50)
)

DECLARE @X XML = '<CLIENTES>
	<CLIENTE COD_CLIENTE="1" NOME_CLIENTE="BRUNO"/>
	<CLIENTE COD_CLIENTE="2" NOME_CLIENTE="NETINHO"/>
	<CLIENTE COD_CLIENTE="3" NOME_CLIENTE="PEDRO"/>
</CLIENTES>'

DECLARE @H INT

EXEC SP_XML_PREPAREDOCUMENT @H OUTPUT, @X

INSERT CLIENTE
SELECT *
FROM OPENXML(@H, '/CLIENTES/CLIENTE', 1)
WITH (COD_CLIENTE INT, NOME_CLIENTE VARCHAR(50))

EXEC SP_XML_REMOVEDOCUMENT @H

SELECT * 
FROM CLIENTE

SELECT *
FROM CLIENTE
FOR XML AUTO, ROOT('CLIENTES')
